% microalgae_analysis.m

% Takes averaged photoquad data and averaged by groups photoquad data in
% addition to environmental data (from Luke Miller's field work, 2013) and
% radula morphometric data and compares the biological aspects of the 
% imaged biolfilms with other factors (temperature, fluorescence and 
% radula/shell morphometrics).

% Inputs:

% Averaged_Photoquad_Data.csv - contains % cover data for biofilm samples
% averaged by treatment.

% Averaged_by_groups.csv - contains % cover data for biofilm samples when
% morphotypes are grouped into filamentaous cyanobacteria, diatoms, etc.

% Environmental_Data.csv - contains environmental data from Luke Miller's
% field work in December 2013.  The second column is fluorescence, the
% third is the temperature range experienced by the treatment, and the
% fourth is the maximum temperature experienced by the treatment [C].

% Limpet_Growth_Data.csv - contains limpet growth data from Luke Miller's
% field work in November and December of 2013.  

% Radula_dimensions.csv - contains morphometric analysis of radulas of 
% 6 L. austrodigitalis and 6 L. scabra from the Hopkins intertidal.  Note
% that shell measurements are in mm and radula measurements are in um.

% Output:

% Graphs for analysis and statistical test results.

clear
clc

%% LOAD FILES

drive = 'C:\Users\Diana\Documents\work\Stanford\Microalgae\Data\'; % Ender

filename1 = [drive 'Averaged_Photoquad_Data_MATLAB.csv'];
filename2 = [drive 'Averaged_by_groups_MATLAB.csv'];
filename3 = [drive 'Environmental_Data.csv'];
filename4 = [drive 'Limpet_Growth_Data.csv'];
filename5 = [drive 'Radula_dimensions.csv'];

treatment_bio_data = load(filename1);
group_bio_data = load(filename2);
enviro_data = load(filename3);
growth_data = load(filename4);

% THE FOLLOWING IS MATLAB GENERATED CODE TO IMPORT RADULA DATA -----------

% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\Diana\Documents\work\Stanford\Microalgae\Data\Radula_dimensions.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2014/10/30 14:23:12

% Initialize variables.
filename = 'C:\Users\Diana\Documents\work\Stanford\Microalgae\Data\Radula_dimensions.csv';
delimiter = ',';
startRow = 2;

% Format string for each line of text:
%   column1: double (%f)
%	column2: text (%s)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

% Open the text file.
fileID = fopen(filename,'r');

% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);

% Close the text file.
fclose(fileID);

% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

% Create output variable
Raduladimensions = table(dataArray{1:end-1}, 'VariableNames', {'SampleNum','Species','Shell_length_mm','Shell_widest_width_mm','Shell_apex_width_mm','Shell_apex_height_mm','HeightLengthRatio','LatTooth1_Height','LatTooth1_Width','LatTooth2_Height','LatTooth2_Width','LatTooth3_Height','LatTooth3_Width','RibbonSegment_Width','VentralPlate_Length','VentralPlate_Width','LatTooth2_Gap','Lat1Lat2_Gap'});

% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;

% END OF MATLAB GENERATED CODE -------------------------------------------

%% ANOVA COMPARISONS

treatment = {'A', 'B', 'C', 'D', 'A', 'B', 'C', 'D', 'A', 'B', 'C', 'D', ...
    'A', 'B', 'C', 'D', 'A', 'B', 'C', 'D', 'A', 'B', 'C', 'D'};

disp('Effect of grazing on F0') % ----------------------------------------

[p, t, stats] = anova1(enviro_data(:,2), treatment); % prints ANOVA table 
% and associated plot
title('Effect of grazing on F0')
xlabel('Grazing Treatment')
ylabel('F0, December 2013')
t

figure()
[p_vals, means] = multcompare(stats, 'ctype', 'hsd') % calculates Tukey's test
% and displays the following:
    % c = tukey's comparison table, column names = ['group 1', 'group 2
    % that is being compared to group 1', 'lower 95% confidence threshold
    % for the mean of group 1 minus the mean of group 2', 'mean of group 1
    % minus the mean of group 2', 'upper 95% confidence threshold for the
    % mean of group 1 minus the mean of group 2', 'p-value']
    % m = list of means and standard error estimates

disp('Checking that temperature is not connected with treatment...')% ----

[p, t, stats] = anova1(enviro_data(:,3), treatment); 
title('Checking for any relationship between temperature and grazing')
xlabel('Grazing Treatment')
ylabel('Daily temp interval [C], December 2013')

[p, t, stats] = anova1(enviro_data(:,4), treatment); 
title('Checking for any relationship between temperature and grazing')
xlabel('Grazing Treatment')
ylabel('Daily max temp [C], December 2013')

% Next, I'll check relationships between %cover and F0, focusing on
% morphotypes 13, 14, 5 and 10 for treatment_bio_data and on all groups
% except non-biological for grouped_bio_data.

disp('Connections between %cover and F0') % ------------------------------

% disp('Morphotype 5')
% 
% [p, t, stats] = anova1(treatment_bio_data(:,6), treatment);
% title('Effect of grazing on Presence of Morphotype 5 (Noodles)')
% xlabel('Grazing Treatment')
% ylabel('%cover Morphotype 5')
% 
% disp('Morphotype 10')
% 
% [p, t, stats] = anova1(treatment_bio_data(:,11), treatment);
% title('Effect of grazing on Presence of Morphotype 10 (Rod-shaped diatoms)')
% xlabel('Grazing Treatment')
% ylabel('%cover Morphotype 10')
% 
% disp('Morphotype 13')
% 
% [p, t, stats] = anova1(treatment_bio_data(:,14), treatment);
% title('Effect of grazing on Presence of Morphotype 13 (Encrusting)')
% xlabel('Grazing Treatment')
% ylabel('%cover Morphotype 13')

disp('Morphotype 14')

[p, t, stats] = anova1(treatment_bio_data(:,15), treatment);
title('Effect of grazing on Presence of Morphotype 14 (Honeycomb)')
xlabel('Grazing Treatment')
ylabel('%cover Morphotype 14')

figure()
[p_vals, means] = multcompare(stats, 'ctype', 'hsd') % calculates Tukey's test

% disp('Filamentous Cyanobacteria')
% 
% [p, t, stats] = anova1(group_bio_data(:,2), treatment);
% title('Effect of grazing on Presence of Filamentous Cyanobacteria')
% xlabel('Grazing Treatment')
% ylabel('%cover Filamentous Cyanobacteria')

disp('Diatoms')

[p, t, stats] = anova1(group_bio_data(:,3), treatment);
title('Effect of grazing on Presence of Diatoms')
xlabel('Grazing Treatment')
ylabel('%cover Diatoms')

figure()
[p_vals, means] = multcompare(stats, 'ctype', 'hsd') % calculates Tukey's test

disp('Encrusting')

[p, t, stats] = anova1(group_bio_data(:,4), treatment);
title('Effect of grazing on Presence of Encrusting Biofilm')
xlabel('Grazing Treatment')
ylabel('%cover Encrusting Biofilm')

figure()
[p_vals, means] = multcompare(stats, 'ctype', 'hsd') % calculates Tukey's test

% disp('Coccoidal Cyanobacteria')
% 
% [p, t, stats] = anova1(group_bio_data(:,5), treatment);
% title('Effect of grazing on Presence of Coccoidal Cyanobacteria')
% xlabel('Grazing Treatment')
% ylabel('%cover Coccoidal Cyanobacteria')

disp('Check for interactions between F0, temp and %cover') % ------------

disp('Relationship between F0 and max temp')
% there should be a negative correlation between F0 and max temp

mdl = fitlm(enviro_data(:,4), enviro_data(:,2));
% fit a linear model

figure()
scatter(enviro_data(:,4), enviro_data(:,2))
% can visualize the model using the basic fitting tool
title('Relationship between max temp and F0')
xlabel('Maximum Temperature [C]')
ylabel('Fluorescence F0')

%% ANCOVA TESTS

xdata = enviro_data(:,4); % temp data
ydata = enviro_data(:,2); % F0 data

disp('ANCOVA test looking at F0, temperature and treatment') % -----------

[h, atab, ctab, stats] = aoctool(xdata, ydata, treatment, 0.05);
% Performs an ANCOVA test  - results seem to indicate an interaction
% between temperature and treatment A

figure()
multcompare(stats, 'ctype', 'hsd') % calculates Tukey's test

% disp('ANCOVA test looking at F0, filamentous cyanobacteria and treatment') 
% 
% [h, atab, ctab, stats] = aoctool(group_bio_data(:,2), ydata, treatment, ...
%     0.05); % ANCOVA
% 
% disp('ANCOVA test looking at F0, diatoms and treatment') % ---------------
% 
% [h, atab, ctab, stats] = aoctool(group_bio_data(:,3), ydata, treatment, ...
%     0.05); % ANCOVA
% 
% disp('ANCOVA test looking at F0, encrusting biofilm and treatment') % ----
% 
% [h, atab, ctab, stats] = aoctool(group_bio_data(:,4), ydata, treatment, ...
%     0.05); % ANCOVA
% 
% disp('ANCOVA test looking at F0, cocoidal cyanobacteria and treatment') 
% 
% [h, atab, ctab, stats] = aoctool(group_bio_data(:,5), ydata, treatment, ...
%     0.05); % ANCOVA

disp('ANCOVA test looking at temp, filamentous cyanobacteria and treatment') 

[h, atab, ctab, stats] = aoctool(xdata, group_bio_data(:,2), treatment, ...
    0.05); % ANCOVA
figure()
multcompare(stats, 'ctype', 'hsd')

% disp('ANCOVA test looking at temp, diatoms and treatment') % -------------
% 
% [h, atab, ctab, stats] = aoctool(xdata, group_bio_data(:,3), treatment, ...
%     0.05); % ANCOVA
% 
% disp('ANCOVA test looking at temp, encrusting biofilm and treatment') % --
% 
% [h, atab, ctab, stats] = aoctool(xdata, group_bio_data(:,4), treatment, ...
%     0.05); % ANCOVA
% 
% disp('ANCOVA test looking at temp, cocoidal cyanobacteria and treatment') 
% 
% [h, atab, ctab, stats] = aoctool(xdata, group_bio_data(:,5), treatment, ...
%     0.05); % ANCOVA

%% COMPARE WITH LIMPET GROWTH DATA

growth_treatment = {'C', 'C', 'C', 'C', 'D', 'D', 'D', 'C', 'C', ...
    'C', 'C', 'D', 'D', 'C', 'C', 'C', 'C', 'D', 'D', 'D', ...
    'D', 'C', 'C', 'C', 'C', 'D', 'D', 'D', 'C', 'C', 'C', 'C', ...
    'D', 'D', 'D', 'C', 'C', 'C', 'C', 'D', 'D', 'D', 'D'};

% disp('Change in shell projected area by treatment')
% anova1(growth_data(:,3), growth_treatment)
% xlabel('Treatment')
% ylabel('Change in shell projected area [mm^2]')

% disp('Estimated change in tissue mass by treatment')
% anova1(growth_data(:,4), growth_treatment)
% xlabel('Treatment')
% ylabel('Change in tissue mass [mg]')
% 
% disp('Estimated change in shell mass by treatment')
% anova1(growth_data(:,5), growth_treatment)
% xlabel('Treatment')
% ylabel('Change in shell mass [mg]')
% 
% disp('Estimated change in total mass by treatment')
% anova1(growth_data(:,6), growth_treatment)
% xlabel('Treatment')
% ylabel('Change in total mass [mg]')
% 
disp('Estimated % change in mass by treatment')
anova1(growth_data(:,7), growth_treatment)
xlabel('Treatment')
ylabel('% change in mass')

% NOTE:  All of the above generate identical significant results:  In all
% metrics, digitalis grew significantly more than scabra

% find out whether treatment affects the relationship between F0 and growth

% aoctool(growth_data(:,12), growth_data(:,7), growth_treatment)

% not significant, so treatment does not affect the positive relationship
% between F0 and growth (more F0 corresponds to more growth)

figure()

hold on
plot(growth_data(:,12), growth_data(:,7), 'bo')
lsline
title('Relationship between F0 and % growth (not influenced by treatment)')
xlabel('Average F0 for Nov and Dec 2013')
ylabel('Estimated % change in mass')
hold off

% check the same for filamentous cyanobacteria, diatoms and coccoidal
% cyanobacteria

% filamentous cyanobacteria
aoctool(growth_data(:,13), growth_data(:,7), growth_treatment)

% no interaction for diatoms and coccoidal cyanobacteria

figure()

hold on
plot(growth_data(:,14), growth_data(:,7), 'bo')
lsline
title('Relationship between % cover diatoms and % growth (not influenced by treatment)')
xlabel('% cover diatoms')
ylabel('Estimated % change in mass')
hold off

figure()

hold on
plot(growth_data(:,15), growth_data(:,7), 'bo')
lsline
title('Relationship between % cover coccoidal cyanobacteria and % growth (not influenced by treatment)')
xlabel('% cover coccoidal cyanobacteria')
ylabel('Estimated % change in mass')
hold off

% relationships between max temperature and % growth and max temperature
% and average F0 are not affected by treatment

% temperature and growth
% aoctool(growth_data(:,9), growth_data(:,7), growth_treatment)

figure()

hold on
plot(growth_data(:,9), growth_data(:,7), 'bo')
lsline
title('Relationship between average max. temp and % growth (not influenced by treatment)')
xlabel('av. max. temp [C]')
ylabel('Estimated % change in mass')
hold off

% temperature and average F0
% aoctool(growth_data(:,9), growth_data(:,12), growth_treatment)

figure()

hold on
plot(growth_data(:,9), growth_data(:,12), 'bo')
lsline
title('Relationship between average max. temp and average F0 (not influenced by treatment)')
xlabel('av. max. temp [C]')
ylabel('av. F0')
hold off

%% COMPARE WITH RADULA MORPHOMETRICS

rad_treatment = Raduladimensions{:, 'Species'};

% check that on average, there are no size differences between spp.
anova1(Raduladimensions{:, 'Shell_length_mm'}, rad_treatment)

% as you would expect based on apex placement, scabra is significantly
% larger in this dimension
anova1(Raduladimensions{:, 'Shell_apex_width_mm'}, rad_treatment)

% this is non-significant (p ~ 0.1), but scabra has a slightly larger width
% than austrodigitalis
anova1(Raduladimensions{:, 'RibbonSegment_Width'}, rad_treatment)

% Ok, now let's look at some of these factors normalized by size of the
% limpet

% here you can see the elongated ventral plates of austrodigitalis
anova1(Raduladimensions{:, 'VentralPlate_Length'}./Raduladimensions{:, ...
    'RibbonSegment_Width'}, rad_treatment)
figure()
boxplot(Raduladimensions{:, 'VentralPlate_Length'}./Raduladimensions{:, ...
    'RibbonSegment_Width'}, rad_treatment)

% After looking at correlations between the variables in Raduladimensions:
    % 1. All factors seem to increase in size with increasing shell size
    % except for VentralPlate_Length.
    % 2. In general, the height of teeth are more directly correlated to shell
    % size than the width of teeth (the opposite seems to be true of tooth
    % 3, but not strongly so)
    % 3. RibbonSegment_Length, and the Gap measures did were also not as
    % directly correlated to shell size as the height of lateral teeth 1
    % and 2
    
 %% DENSITY DEPENDENCE BAR GRAPHS
 
num_limpets = [4,3,4,2,4,4,4,3,4,3,4,4];
num_coccoidal = [group_bio_data([3,4,7,8,11,12,15,16,19,20, ...
    23,24], 5)];
num_encrusting = [group_bio_data([3,4,7,8,11,12,15,16,19,20, ...
    23,24], 4)];

no_limpets = [treatment_bio_data(1, [6,9,10,14,15,16]);
treatment_bio_data(5, [6,9,10,14,15,16]); treatment_bio_data(9, [6,9,10,14,15,16]);
treatment_bio_data(13, [6,9,10,14,15,16]); treatment_bio_data(17, [6,9,10,14,15,16]);
treatment_bio_data(21, [6,9,10,14,15,16])]; % data for specific morphotypes on ungrazed plates

two_limpets = [treatment_bio_data(8, [6,9,10,14,15,16])];
% data for plates grazed by only 2 limpets

three_limpets = [treatment_bio_data(4, [6,9,10,14,15,16]);
treatment_bio_data(16, [6,9,10,14,15,16]); treatment_bio_data(20, [6,9,10,14,15,16])];
% grazed by three limpets

four_limpets = [treatment_bio_data(3, [6,9,10,14,15,16]);
treatment_bio_data(7, [6,9,10,14,15,16]); treatment_bio_data(11, [6,9,10,14,15,16]);
treatment_bio_data(12, [6,9,10,14,15,16]); treatment_bio_data(15, [6,9,10,14,15,16]);
treatment_bio_data(19, [6,9,10,14,15,16]); treatment_bio_data(23, [6,9,10,14,15,16]);
treatment_bio_data(24, [6,9,10,14,15,16])];
% grazed by four limpets

av_no_limpets = mean(no_limpets);
av_three_limpets = mean(three_limpets);
av_four_limpets = mean(four_limpets);

x = [1:4];
y = [av_no_limpets; two_limpets; av_three_limpets; av_four_limpets;];

figure()
bar(x,y) % create bar graph
xlabel('Number of Limpets')
ylabel('% Cover')
legend('5 - Filamentous Cyanobacteria', '8 - Diatom', '9 - Diatom', ...
    '13 - Encrusting', '14 - Encrusting', '15 - Coccoidal Cyanobacteria', ...
    'Location', 'southoutside', 'Orientation', 'horizontal')

% Regressions:

% Limpet number and coccoidal cyanobacteria
fitlm(num_limpets, num_coccoidal)
figure()
scatter(num_limpets, num_coccoidal)
xlabel('Number of Limpets')
ylabel('% Cover Coccoidal Cyanobacteria')

% Limpet number and encrusting organisms
fitlm(num_limpets, num_encrusting)
figure()
scatter(num_limpets, num_encrusting)
xlabel('Number of Limpets')
ylabel('% Cover Encrusting Organisms')





